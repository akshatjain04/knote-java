# ********RoostGPT********

# Test generated by RoostGPT for test credential-wallet-integration-test using AI Type Open AI and AI Model gpt-4
# 
# ROOST_METHOD_HASH=dff35151d7
# ROOST_METHOD_SIG_HASH=3a7061432c
# 
#    ########## Scenario ##########  
# 
# {
#   background: 'Given the base URL is "http://localhost:8080"',
#   rule: null,
#   scenario: 'Create my account \r\n' +
#     '    When the client sends a POST request "/accounts" with the accounts_body payload\r\n' +
#     '    Then create an account with the specified informatio\r\n' +
#     '    And verify the account created using GET request for "/me"',
#   title: 'Create my account'
# }
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 20
  payload:
    path: "CreateMyAccount.csv"
    fields:
      - "accounts_body"
    skipHeader: true
    delimiter: "^|^"
  plugins:
    expect: {}

scenarios:
  - name: "Create my account"
    flow:
      - post:
          url: "/accounts"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            commit-hash: "{{ $processEnvironment.COMMIT_HASH }}"
          json:
            body: "{{ accounts_body }}"
          expect:
            - statusCode: 201
            - hasProperty: "id"
            - hasProperty: "name"
            - headerEquals: { "api-version": "1.0.0" }
          log: "Create an account with the specified information"
      - think: 1
      - get:
          url: "/me"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 200
            - hasProperty: "id"
            - hasProperty: "name"
            - hasProperty: "email"
            - hasProperty: "settings"
            - hasProperty: "createdAt"
            - hasProperty: "updatedAt"
            - headerEquals: { "api-version": "1.0.0" }
          log: "Verify the account created"
