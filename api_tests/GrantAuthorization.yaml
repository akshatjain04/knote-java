# ********RoostGPT********

# Test generated by RoostGPT for test credential-wallet-integration-test using AI Type Open AI and AI Model gpt-4
# 
# ROOST_METHOD_HASH=803fe763f5
# ROOST_METHOD_SIG_HASH=c56a467b87
# 
#    ########## Scenario ##########  
# 
# {
#   background: 'Given the base URL is "http://localhost:8080"',
#   rule: null,
#   scenario: 'Grant authorization\r\n' +
#     '    Given an existing account, create another account\r\n' +
#     '    When the client sends a POST request to "/authorizations"\r\n' +
#     '    Then grant access to your account and confirm access via GET request to "/authorizations"',
#   title: 'Grant authorization'
# }
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 20
  plugins:
    expect: {}
  payload:
    path: "GrantAuthorization.csv"
    fields:
      - "email"
      - "newEmail"
    skipHeader: true
    delimiter: "^|^"

scenarios:
  - name: "Grant authorization"
    flow:
      - post:
          url: "/accounts"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            commit-hash: "{{ $processEnvironment.COMMIT_HASH }}"
          json:
            email: "{{ email }}"
          expect:
            - statusCode: 201
            - hasHeader: "api-version"
            - headerEquals: ["api-version", "1.0.0"]
            - hasHeader: "commit-hash"
          log: "Given an existing account, create another account"
      - think: 1
      - post:
          url: "/accounts"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            commit-hash: "{{ $processEnvironment.COMMIT_HASH }}"
          json:
            email: "{{ newEmail }}"
          expect:
            - statusCode: 201
            - hasHeader: "api-version"
            - headerEquals: ["api-version", "1.0.0"]
            - hasHeader: "commit-hash"
          log: "Given an existing account, create another account"
      - think: 1
      - post:
          url: "/authorizations"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            email: "{{ email }}"
          expect:
            - statusCode: 201
            - hasProperty: "id"
            - hasProperty: "name"
            - hasProperty: "email"
            - hasProperty: "createdAt"
            - hasProperty: "updatedAt"
            - hasHeader: "api-version"
            - headerEquals: ["api-version", "1.0.0"]
          log: "When the client sends a POST request to /authorizations"
      - think: 1
      - get:
          url: "/authorizations"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 200
            - hasProperty: "total"
            - hasProperty: "authorizations"
            - hasProperty: "authorizations.0.id"
            - hasProperty: "authorizations.0.name"
            - hasProperty: "authorizations.0.email"
            - hasProperty: "authorizations.0.createdAt"
            - hasProperty: "authorizations.0.updatedAt"
            - hasHeader: "api-version"
            - headerEquals: ["api-version", "1.0.0"]
          log: "Then grant access to your account and confirm access via GET request to /authorizations"
      - think: 1
