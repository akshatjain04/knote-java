# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# {
#   background: 'Given the base URL is "http://localhost:8080"',
#   rule: null,
#   scenario: 'Delete authorization\r\n' +
#     '    Given authorization ID\r\n' +
#     '    When the client sends a DELETE request to "/authorizations/ID"\r\n' +
#     '    Then the response status code should be 200 for a successful delete\r\n' +
#     '    And the authorizations should not appear in GET request for "/authorizations"',
#   title: 'Delete authorization'
# }
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  variables:
    authorizationId: "{{ $processEnvironment.AUTHORIZATION_ID }}"
  payload:
    skipHeader: true
  plugins:
    expect: {}

scenarios:
  - name: "scenario: DeleteAuthorization"
    flow:
      - comment: "Given authorization ID"
      - delete:
          url: "/authorizations/{{ authorizationId }}"
          headers:
            Token: "{{ $processEnvironment.AUTH_TOKEN }}"
          log: "Delete request to /authorizations/ID"
          expect:
            - statusCode: 200
            - hasHeader: "api-version"
            - headerEquals: { "api-version": "1.0.0" }
      - think: 1
      - comment: "Then the authorizations should not appear in GET request for /authorizations"
      - get:
          url: "/authorizations"
          headers:
            Token: "{{ $processEnvironment.AUTH_TOKEN }}"
          log: "GET request to /authorizations to ensure the authorization ID has been deleted"
          expect:
            - statusCode: 200
            - hasProperty: "total"
            - hasProperty: "authorizations"
            - jmespath: "authorizations[*].id | contains(@, `{{ authorizationId }}`) == `false`"
            - hasHeader: "api-version"
            - headerEquals: { "api-version": "1.0.0" }
