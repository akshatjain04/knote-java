# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# {
#   background: 'Given the base URL is "http://localhost:8080"',
#   rule: null,
#   scenario: 'Delete authorization\r\n' +
#     '    Given authorization ID\r\n' +
#     '    When the client sends a DELETE request to "/authorizations/ID"\r\n' +
#     '    Then the response status code should be 200 for a successful delete\r\n' +
#     '    And the authorizations should not appear in GET request for "/authorizations"',
#   title: 'Delete authorization'
# }
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  plugins:
    expect: {}

scenarios:
  - name: Delete authorization scenario
    flow:
      # Authorize and store authorization ID for deletion
      - post:
          url: "/authorizations"
          headers:
            Token: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            email: "{{ userEmail }}"
          skipHeaders: true
          log: "Creating an authorization to be deleted."
          expect:
            - statusCode: 201
            - hasProperty: "id"
            - hasProperty: "name"
            - hasProperty: "email"
            - hasProperty: "createdAt"
            - hasProperty: "updatedAt"
            - headerEquals: {"api-version": "1.0.0"}
            - matchesRegexp: { "location": "/authorizations/[a-f0-9-]+" }
          capture:
            json: "$.id"
            as: "authorizationId"
          think: 1

      # Delete the created authorization
      - delete:
          url: "/authorizations/{{ authorizationId }}"
          headers:
            Token: "{{ $processEnvironment.AUTH_TOKEN }}"
          log: "Sending DELETE request to remove the authorization."
          expect:
            - statusCode: 200
            - headerEquals: {"api-version": "1.0.0"}
          think: 1

      # Verify the authorization has been deleted
      - get:
          url: "/authorizations"
          headers:
            Token: "{{ $processEnvironment.AUTH_TOKEN }}"
          log: "Getting the list of authorizations to verify deletion."
          expect:
            - statusCode: 200
            - headerEquals: {"api-version": "1.0.0"}
            - jmespath: "authorizations[?id==`{{ authorizationId }}`]|length(@)|[?@==`0`]"
          think: 1
