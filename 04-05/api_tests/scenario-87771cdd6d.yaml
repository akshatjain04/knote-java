# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# {
#   background: 'Given the base URL is "http://localhost:8080"',
#   rule: null,
#   scenario: 'Delete authorization\r\n' +
#     '    Given authorization ID\r\n' +
#     '    When the client sends a DELETE request to "/authorizations/ID"\r\n' +
#     '    Then the response status code should be 200 for a successful delete\r\n' +
#     '    And the authorizations should not appear in GET request for "/authorizations"',
#   title: 'Delete authorization'
# }
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  payload:
    path: "scenario-87771cdd6d.csv"
    fields:
      - "authorizationID"
    skipHeader: true
  plugins:
    expect: {}

scenarios:
  - name: "Delete authorization scenario"
    flow:
      # Delete an existing authorization and expect a 200 status code
      - log: "Deleting an existing authorization"
      - delete:
          url: "/authorizations/{{ authorizationID }}"
          headers:
            Token: "{{ $processEnvironment.AUTH_TOKEN }}"
            Content-Type: "application/json"
          expect:
            - statusCode: 200
            - hasHeader: "api-version"
            - headerEquals: {"api-version": "1.0.0"}
      - think: 1

      # Verify the authorization is deleted by ensuring it doesn't appear in the GET request
      - log: "Verifying the authorization is deleted"
      - get:
          url: "/authorizations"
          headers:
            Token: "{{ $processEnvironment.AUTH_TOKEN }}"
            Content-Type: "application/json"
          expect:
            - statusCode: 200
            - jmespath: "authorizations[?id=='{{ authorizationID }}'] | length(@) | to_string(@) `0`"
            - hasHeader: "api-version"
            - headerEquals: {"api-version": "1.0.0"}
      - think: 1
