# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# ROOST_METHOD_HASH=dff35151d7
# ROOST_METHOD_SIG_HASH=3a7061432c
# 
#    ########## Scenario ##########  
# 
# {
#   background: 'Given the base URL is "http://localhost:8080"',
#   rule: null,
#   scenario: 'Create my account \r\n' +
#     '    When the client sends a POST request "/accounts" with the accounts_body payload\r\n' +
#     '    Then create an account with the specified informatio\r\n' +
#     '    And verify the account created using GET request for "/me"',
#   title: 'Create my account'
# }
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  payload:
    path: "CreateMyAccountScenario.csv"
    fields:
      - "email"
    skipHeader: true
  plugins:
    expect: {}

scenarios:
  - name: "Create my account scenario"
    flow:
      - post:
          url: "/accounts"
          json:
            email: "{{ email }}"
          headers:
            commit-hash: "{{ $processEnvironment.COMMIT_HASH }}"
            api-version: "1.0.0"
          # Create a new account with the specified information
          expect:
            - statusCode: 201
            - hasProperty: 'accountId'
            - hasHeader: 'api-version'
            - headerEquals: { api-version: "1.0.0" }
          log: "POST request to /accounts to create a new account"
          think: 1

      - get:
          url: "/me"
          headers:
            Token: "{{ $processEnvironment.AUTH_TOKEN }}"
            api-version: "1.0.0"
          # Verify the account created using GET request for /me
          expect:
            - statusCode: 200
            - hasProperty: 'id'
            - hasProperty: 'email'
            - hasProperty: 'name'
            - hasProperty: 'settings'
            - hasProperty: 'createdAt'
            - hasProperty: 'updatedAt'
            - hasHeader: 'api-version'
            - headerEquals: { api-version: "1.0.0" }
            - matchesRegexp: { id: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$" }
            - matchesRegexp: { email: "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$" }
            - matchesRegexp: { createdAt: "^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}).(\\d{3})Z$" }
            - matchesRegexp: { updatedAt: "^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}).(\\d{3})Z$" }
          log: "GET request to /me to verify the created account"
          think: 1
