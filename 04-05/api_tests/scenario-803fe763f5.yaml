// ********RoostGPT********

// Test generated by RoostGPT for test MiniProjects using AI Type Open AI and AI Model gpt-4-1106-preview
// 
// 

// ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  payload:
    path: "scenario-803fe763f5.csv"
    skipHeader: true
  environments:
    development:
      API_HOST: "http://localhost:8080"
  plugins:
    expect: {}

scenarios:
  - name: "scenario: Grant authorization"
    flow:
      - post: # Create a new account
          url: "/accounts"
          json:
            email: "{{ email }}"
          headers:
            Content-Type: "application/json"
            commit-hash: "{{ commitHash }}"
          expect:
            - statusCode: 201
            - hasHeader: "api-version"
            - headerEquals: {"api-version": "1.0.0"}
            - hasProperty: "id"
            - hasProperty: "email"
            - hasProperty: "createdAt"
            - hasProperty: "updatedAt"
          log: "Creating a new account"
          think: 1

      - post: # Grant access to your account
          url: "/authorizations"
          json:
            email: "{{ email }}"
          headers:
            Content-Type: "application/json"
            Token: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 201
            - hasHeader: "api-version"
            - headerEquals: {"api-version": "1.0.0"}
            - hasHeader: "location"
            - hasProperty: "id"
            - hasProperty: "name"
            - hasProperty: "email"
            - hasProperty: "createdAt"
            - hasProperty: "updatedAt"
          log: "Granting access to the account"
          think: 1

      - get: # Confirm access via GET request
          url: "/authorizations"
          headers:
            Token: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 200
            - hasHeader: "api-version"
            - headerEquals: {"api-version": "1.0.0"}
            - hasProperty: "total"
            - hasProperty: "authorizations"
            - matchesRegexp: {"authorizations.0.id": "^[0-9a-fA-F-]{36}$"}
            - hasProperty: "authorizations.0.name"
            - hasProperty: "authorizations.0.email"
            - matchesRegexp: {"authorizations.0.createdAt": "^(\\d{4}-[01]\\d-[0-3]\\d[T][0-2]\\d:[0-5]\\d:[0-5]\\d\\.[0-9]+[+-][0-2]\\d:[0-5]\\d|Z)$"}
            - matchesRegexp: {"authorizations.0.updatedAt": "^(\\d{4}-[01]\\d-[0-3]\\d[T][0-2]\\d:[0-5]\\d:[0-5]\\d\\.[0-9]+[+-][0-2]\\d:[0-5]\\d|Z)$"}
          log: "Confirming access has been granted"
          think: 1
