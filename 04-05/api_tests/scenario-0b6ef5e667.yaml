# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# {
#   background: null,
#   rule: null,
#   scenario: 'Find pet by status\n' +
#     '    Given the API running at http://petstore.swagger.io/v2\n' +
#     '    And an endpoint of http://petstore.swagger.io/v2/pet/findByStatus\n' +
#     '    When a GET request is made\n' +
#     '    And the status parameter is test\n' +
#     '    And the Accepts header is application/json\n' +
#     '    Then a 200 response is returned within 50ms',
#   title: 'Find pet by status'
# }
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}/v2"
  phases:
    - duration: 60
      arrivalRate: 1
  environments:
    development:
      API_HOST: "http://petstore.swagger.io"
  plugins:
    expect: {}
  defaults:
    headers:
      api_key: "{{ $processEnvironment.AUTH_TOKEN }}"

scenarios:
  - name: "scenario: Find pet by valid status"
    flow:
      - comment: "Sending GET request to find pets by status 'available'"
      - get:
          url: "/pet/findByStatus?status=available"
          headers:
            Accept: "application/json"
          expect:
            - statusCode: 200
            - hasProperty: "id"
            - hasProperty: "category"
            - hasProperty: "name"
            - hasProperty: "photoUrls"
            - hasProperty: "tags"
            - hasProperty: "status"
            - contentType: "application/json"
            - matchesRegexp: "status": "available|pending|sold"
      - think: 1

  - name: "scenario: Find pet by invalid status"
    flow:
      - comment: "Sending GET request to find pets by an invalid status"
      - get:
          url: "/pet/findByStatus?status=invalid"
          headers:
            Accept: "application/json"
          expect:
            - statusCode: 400
            - hasProperty: "message"
            - matchesRegexp: "message": "Invalid status value"
      - think: 1

  - name: "scenario: Find pet by status without authorization"
    flow:
      - comment: "Sending GET request to find pets by status without authorization header"
      - get:
          url: "/pet/findByStatus?status=available"
          headers:
            Accept: "application/json"
          expect:
            - statusCode: 403
            - hasProperty: "message"
            - matchesRegexp: "message": "Authentication information is missing or invalid"
      - think: 1
