# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# ROOST_METHOD_HASH=87771cdd6d
# ROOST_METHOD_SIG_HASH=0a68a12aee
# 
#    ########## Scenario ##########  
# 
# {
#   background: 'Given the base URL is "http://localhost:8080"',
#   rule: null,
#   scenario: 'Delete authorization\r\n' +
#     '    Given authorization ID\r\n' +
#     '    When the client sends a DELETE request to "/authorizations/ID"\r\n' +
#     '    Then the response status code should be 200 for a successful delete\r\n' +
#     '    And the authorizations should not appear in GET request for "/authorizations"',
#   title: 'Delete authorization'
# }
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  payload:
    path: "DeleteAuthorizationScenario.csv"
    skipHeader: true
    fields:
      - "authorizationId"
  plugins:
    expect: {}

scenarios:
  - name: "Delete authorization"
    flow:
      # Given authorization ID
      - post: # Log in to get authorization token
          url: "/login"
          headers:
            Content-Type: "application/json"
          json:
            email: "user@example.com"
            otp: "123456"
            client: "api"
          log: "Logging in to obtain authorization token."
          think: 1
          expect:
            - statusCode: 201
            - hasHeader: "api-version"
            - matchesRegexp:
                header: "api-version"
                pattern: "^\\d+\\.\\d+\\.\\d+$"
      - get: # Retrieve the list of authorizations before deletion
          url: "/authorizations"
          headers:
            Token: "{{ $processEnvironment.AUTH_TOKEN }}"
          log: "Fetching list of authorizations before deletion."
          think: 1
          expect:
            - statusCode: 200
            - hasProperty: "total"
            - hasProperty: "authorizations"
            - hasProperty: "authorizations.0.id"
            - hasProperty: "authorizations.0.name"
            - hasProperty: "authorizations.0.email"
            - hasProperty: "authorizations.0.createdAt"
            - hasProperty: "authorizations.0.updatedAt"
      - delete: # Delete the authorization with the given ID
          url: "/authorizations/{{ authorizationId }}"
          headers:
            Token: "{{ $processEnvironment.AUTH_TOKEN }}"
          log: "Deleting the authorization with the given ID."
          think: 1
          expect:
            - statusCode: 200
      - get: # Verify the authorization is deleted
          url: "/authorizations"
          headers:
            Token: "{{ $processEnvironment.AUTH_TOKEN }}"
          log: "Verifying the authorization has been deleted."
          think: 1
          expect:
            - statusCode: 200
            - equals:
                json: "$.authorizations"
                value: []
            - jmespath: "length(authorizations[?id=='{{ authorizationId }}']) == `0`"
