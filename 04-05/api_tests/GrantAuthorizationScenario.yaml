# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# ROOST_SCENARIO_HASH=803fe763f5
# ROOST_SCENARIO_TITLE_HASH=c56a467b87
# 
#    ########## Scenario ##########  
# 
# {
#   background: 'Given the base URL is "http://localhost:8080"',
#   rule: null,
#   scenario: 'Grant authorization\r\n' +
#     '    Given an existing account, create another account\r\n' +
#     '    When the client sends a POST request to "/authorizations"\r\n' +
#     '    Then grant access to your account and confirm access via GET request to "/authorizations"',
#   title: 'Grant authorization'
# }
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  environments:
    development:
      API_HOST: "http://localhost:8080"
  plugins:
    expect: {}

scenarios:
  - name: "scenario: Grant authorization"
    flow:
      # Create another account
      - post:
          url: "/accounts"
          json:
            email: "user@example.com"
          headers:
            Content-Type: application/json
            commit-hash: "928d28d"
          log: "Creating another account"
          expect:
            - statusCode: 201
            - hasHeader: api-version
            - headerEquals: { api-version: "1.0.0" }
            - hasProperty: accountId
      - think: 1

      # Grant access to your account
      - post:
          url: "/authorizations"
          json:
            email: "user@example.com"
          headers:
            Content-Type: application/json
            Token: "{{ $processEnvironment.AUTH_TOKEN }}"
          log: "Granting access to your account"
          expect:
            - statusCode: 201
            - hasHeader: api-version
            - headerEquals: { api-version: "1.0.0" }
            - hasHeader: location
            - hasProperty: id
            - hasProperty: name
            - hasProperty: email
            - hasProperty: createdAt
            - hasProperty: updatedAt
      - think: 1

      # Confirm access via GET request to "/authorizations"
      - get:
          url: "/authorizations"
          headers:
            Token: "{{ $processEnvironment.AUTH_TOKEN }}"
          log: "Confirming granted access"
          expect:
            - statusCode: 200
            - hasHeader: api-version
            - headerEquals: { api-version: "1.0.0" }
            - hasProperty: total
            - hasProperty: authorizations
            - matchesRegexp: { authorizations.0.id: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$" }
            - hasProperty: authorizations.0.name
            - matchesRegexp: { authorizations.0.email: "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$" }
            - matchesRegexp: { authorizations.0.createdAt: "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z$" }
            - matchesRegexp: { authorizations.0.updatedAt: "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z$" }
