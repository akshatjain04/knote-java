# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# {
#   background: null,
#   rule: null,
#   scenario: 'Find pet by tags\n' +
#     '    Given the API running at http://petstore.swagger.io/v2\n' +
#     '    When a GET request to /pet/findByTags is made\n' +
#     '    And the tags parameter is test\n' +
#     '    And the request expects json\n' +
#     '    Then a 200 response is returned within 50ms',
#   title: 'Find pet by tags'
# }
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}/v2"
  phases:
    - duration: 60
      arrivalRate: 1
  plugins:
    expect: {}
  environments:
    development:
      API_HOST: http://petstore.swagger.io
  payload:
    path: "scenario-8a27a15f70.csv"
    fields:
      - "petId"
    skipHeader: true

scenarios:
  - name: "Find pet by tags"
    flow:
      - get:
          url: "/pet/findByTags?tags=test"
          headers:
            Accept: "application/json"
            api_key: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 200
            - contentType: "application/json"
            - hasProperty: "id"
            - hasProperty: "category"
            - hasProperty: "name"
            - hasProperty: "photoUrls"
            - hasProperty: "tags"
            - hasProperty: "status"
            # Asserting the response body matches the expected schema
            - jmespath: "category.id | to_number(@)"
            - jmespath: "category.name | to_string(@)"
            - jmespath: "name | to_string(@)"
            - jmespath: "photoUrls[0] | to_string(@)"
            - jmespath: "tags[0].id | to_number(@)"
            - jmespath: "tags[0].name | to_string(@)"
            - jmespath: "status | matches('^(available|pending|sold)$')"
          log: "Sending GET request to find pets by tags with expected status 200"
      - think: 1
