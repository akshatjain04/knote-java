# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# {
#   background: 'Given the base URL is "http://localhost:8080"',
#   rule: null,
#   scenario: 'Create my account \r\n' +
#     '    When the client sends a POST request "/accounts" with the accounts_body payload\r\n' +
#     '    Then create an account with the specified informatio\r\n' +
#     '    And verify the account created using GET request for "/me"',
#   title: 'Create my account'
# }
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  payload:
    path: "{{ROOST_CSV_FILE_NAME}}"
    fields:
      - "email"
    skipHeader: true
  environments:
    development:
      API_HOST: "http://localhost:8080"
  plugins:
    expect: {}

scenarios:
  - name: "Create my account"
    flow:
      # Create a new account
      - post:
          url: "/accounts"
          json:
            email: "{{ email }}"
          headers:
            Content-Type: "application/json"
            commit-hash: "string (in:header)"
          log: "Creating a new account with the specified information."
          expect:
            - statusCode: 201
            - hasProperty: "id"
            - hasProperty: "username"
            - hasProperty: "email"
            - hasHeader: "api-version"
            - headerEquals: { api-version: "1.0.0" }
          think: 1

      # Verify the account created using GET request for "/me"
      - get:
          url: "/me"
          headers:
            Token: "{{ $processEnvironment.AUTH_TOKEN }}"
          log: "Verifying the account created."
          expect:
            - statusCode: 200
            - hasProperty: "id"
            - hasProperty: "username"
            - hasProperty: "email"
            - hasProperty: "settings"
            - hasProperty: "createdAt"
            - hasProperty: "updatedAt"
            - hasHeader: "api-version"
            - headerEquals: { api-version: "1.0.0" }
            - matchesRegexp: { id: "^[0-9a-fA-F-]{36}$" }
            - matchesRegexp: { email: "^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$" }
            - matchesRegexp: { createdAt: "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z$" }
            - matchesRegexp: { updatedAt: "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z$" }
          think: 1
