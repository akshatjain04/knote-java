# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# ROOST_METHOD_HASH=8a678d19dd
# ROOST_METHOD_SIG_HASH=92354c4d7f
# 
#    ########## Scenario ##########  
# 
# {
#   feature: 'Feature: Account Consent Setup',
#   background: 'Background:\r\n' +
#     "        * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')\r\n" +
#     '        * url urlBase\r\n' +
#     "        * def authToken = karate.properties['AUTH_TOKEN']",
#   rule: null,
#   scenario: {
#     title: 'Scenario: Create account consent with unsupported media type',
#     steps: "Given path '/aisp/account-consents'\r\n" +
#       "And header Authorization = 'Bearer ' + authToken\r\n" +
#       "And header Content-Type = 'text/plain'\r\n" +
#       "And request 'Invalid content type'\r\n" +
#       'When method POST\r',
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}/aisp"
  phases:
    - duration: 60
      arrivalRate: 1
  payload:
    path: "CreateAccountConsentWithUnsupportedMediaType.csv"
    skipHeader: true
    fields:
      - "authToken"
    delimiter: "^|^"
  plugins:
    expect: {}

scenarios:
  - name: "scenario: Create account consent with unsupported media type"
    flow:
      - log: "Sending POST request to create account consent with an unsupported media type"
      - post:
          url: "/account-consents"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
            Content-Type: "text/plain"
          payload: "Invalid content type"
          expect:
            - statusCode: 415
            - hasHeader: "Content-Type"
            - headerEquals: 
                header: "Content-Type"
                value: "text/plain"
      - log: "Expecting response with 415 Unsupported Media Type status code and correct 'Content-Type' header"
      - think: 1
