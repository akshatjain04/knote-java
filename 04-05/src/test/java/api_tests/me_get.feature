# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# Feature file generated for /me_get for http method type GET 
# RoostTestHash=ae6b8ce5ab
# 
# 

# ********RoostGPT********
Feature: Account Details

Background:
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase
  * def authToken = karate.env['AUTH_TOKEN']
  * header Token = authToken

Scenario: Get account details with valid token
  Given path '/me'
  When method get
  Then status 200
  And match header api-version == '1.0.0'
  And match each $.response contains { id: '#uuid', createdAt: '#string', email: '#regex[^(([^<>()[\\]\\\\.,;:\\s@\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$]' }
  And match each $.response contains { updatedAt: '#string', name: '#regex[^[\\p{L} .\'-]{1,100}$]', image: '#regex[^\\w+:(\\/?\\/?)[^\\s]+$]' }
  And match each $.response contains { settings: '#object' }

Scenario: Get account details with missing or invalid token
  Given path '/me'
  And header Token = null
  When method get
  Then status 401
  And match header api-version == '1.0.0'
  And match response contains { error: '#string', description: 'Authentication Required' }

Scenario: Get account details with malformed request
  Given path '/me'
  And param invalidParam = 'malformed'
  When method get
  Then status 400
  And match header api-version == '1.0.0'
  And match response contains { error: '#string', description: 'Bad Request' }
