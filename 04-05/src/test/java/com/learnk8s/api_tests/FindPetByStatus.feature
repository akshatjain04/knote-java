# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# ROOST_METHOD_HASH=0b6ef5e667
# ROOST_METHOD_SIG_HASH=be51b04608
# 
#  ########## Scenario ########## 
# 
# {
#   background: null,
#   rule: null,
#   scenario: 'Find pet by status\n' +
#     '    Given the API running at http://petstore.swagger.io/v2\n' +
#     '    And an endpoint of http://petstore.swagger.io/v2/pet/findByStatus\n' +
#     '    When a GET request is made\n' +
#     '    And the status parameter is test\n' +
#     '    And the Accepts header is application/json\n' +
#     '    Then a 200 response is returned within 50ms',
#   title: 'Find pet by status'
# }
# 

# ********RoostGPT********
Feature: Validate the pet findByStatus API endpoint

Background:
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase

Scenario: Find pet by status with valid status parameter
  # Expected outcome: API returns a 200 response with a list of pets matching the status
  Given path '/v2/pet/findByStatus'
  And param status = 'available'
  And header Accepts = 'application/json'
  When method get
  Then status 200
  And assert response[*].status == 'available'
  And assert response[*].id != null
  And assert response[*].category != null
  And assert response[*].name != null
  And assert response[*].photoUrls != null
  And assert response[*].tags != null

Scenario: Find pet by status with invalid status parameter
  # Expected outcome: API returns a 400 response due to invalid status value
  Given path '/v2/pet/findByStatus'
  And param status = 'test'
  And header Accepts = 'application/json'
  When method get
  Then status 400
