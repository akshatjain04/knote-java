# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# ROOST_METHOD_HASH=0f74d143e7
# ROOST_METHOD_SIG_HASH=92354c4d7f
# 
#  ########## Scenario ########## 
# 
# {
#   feature: 'Feature: Account Consent Setup',
#   background: 'Background:\r\n' +
#     "        * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')\r\n" +
#     '        * url urlBase\r\n' +
#     "        * def authToken = karate.properties['AUTH_TOKEN']",
#   rule: null,
#   scenario: {
#     title: 'Scenario: Create account consent with unsupported media type',
#     steps: "Given path '/aisp/account-consents'\r\n" +
#       "And header Authorization = 'Bearer ' + authToken\r\n" +
#       "And header Content-Type = 'text/plain'\r\n" +
#       "And request 'Invalid content type'\r\n" +
#       'When method POST\r\n' +
#       'Then status 415',
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
Feature: Account Consent Setup

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']

  Scenario: Create account consent with unsupported media type
    Given path '/aisp/account-consents'
    And header Authorization = 'Bearer ' + authToken
    And header Content-Type = 'text/plain'
    And request 'Invalid content type'
    When method post
    Then status 415
