# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# ROOST_METHOD_HASH=8a27a15f70
# ROOST_METHOD_SIG_HASH=f089875b0d
# 
#  ########## Scenario ########## 
# 
# {
#   background: null,
#   rule: null,
#   scenario: 'Find pet by tags\n' +
#     '    Given the API running at http://petstore.swagger.io/v2\n' +
#     '    When a GET request to /pet/findByTags is made\n' +
#     '    And the tags parameter is test\n' +
#     '    And the request expects json\n' +
#     '    Then a 200 response is returned within 50ms',
#   title: 'Find pet by tags'
# }
# 

# ********RoostGPT********
Feature: Find pet by tags

Background:
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase

Scenario: Successfully find pet by tags
  # Expected outcome: A successful response with a list of pets that match the specified tags
  Given path '/v2/pet/findByTags'
  And param tags = 'test'
  And header Accept = 'application/json'
  When method get
  Then status 200
  And assert response contains any { id: '#number', category: { id: '#number', name: '#string' }, name: '#string', photoUrls: '#array', tags: '#array', status: '#string' }
  And assert responseTime < 50

Scenario: Find pet by tags with invalid tag value
  # Expected outcome: An error response for invalid tag value
  Given path '/v2/pet/findByTags'
  And param tags = 'invalidTagValue'
  And header Accept = 'application/json'
  When method get
  Then status 400
