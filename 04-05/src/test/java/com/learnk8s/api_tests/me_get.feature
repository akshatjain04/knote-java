# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# Feature file generated for /me_get for http method type GET 
# RoostTestHash=ae6b8ce5ab
# 
# 

# ********RoostGPT********
Feature: Account Details API

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
    * url urlBase
    * def authToken = karate.env['AUTH_TOKEN']
    * def apiVersionHeader = { 'Token': '#(authToken)', 'api-version': '1.0.0' }

  Scenario: Get account details with valid API key
    Given path '/me'
    And headers apiVersionHeader
    When method get
    Then status 200
    And match response == { id: '#uuid', did: '##string', name: '#? _ != null ? _.matches(/^[\\p{L} .\'-]{1,100}$/) : true', image: '#? _ != null ? _.matches(/^\\w+:(\\/?\\/?)[^\\s]+$/) : true', email: '#regex[^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$]', settings: '##object', createdAt: '#datetime', updatedAt: '#datetime' }
    And match responseHeaders contains { 'api-version': '1.0.0' }

  Scenario: Get account details with missing API key
    Given path '/me'
    And headers { 'api-version': '1.0.0' }
    When method get
    Then status 401
    And match response == { error: '#string', description: '#string' }
    And match responseHeaders contains { 'api-version': '1.0.0' }

  Scenario: Get account details with bad API key
    Given path '/me'
    And headers { 'Token': 'invalid-key', 'api-version': '1.0.0' }
    When method get
    Then status 401
    And match response == { error: '#string', description: '#string' }
    And match responseHeaders contains { 'api-version': '1.0.0' }
