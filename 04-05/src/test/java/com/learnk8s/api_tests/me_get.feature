# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# Feature file generated for /me_get for http method type GET 
# RoostTestHash=ae6b8ce5ab
# 
# 

# ********RoostGPT********
Feature: Account Details

Background:
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase
  * def authToken = karate.env['AUTH_TOKEN']
  * def ApiKeyHeader = { Token: '#(authToken)' }

Scenario: Retrieve account details with valid API key
  Given path '/me'
  And headers ApiKeyHeader
  When method get
  Then status 200
  And match header api-version == '1.0.0'
  And match response contains { id: '#uuid', email: '#regex[^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$]' }
  And match response.createdAt == '#datetime'
  And match response.updatedAt == '#datetime'

Scenario: Retrieve account details without API key
  Given path '/me'
  When method get
  Then status 401
  And match header api-version == '1.0.0'
  And match response.error == '#string'
  And match response.description == '#string'

Scenario: Retrieve account details with invalid API key
  Given path '/me'
  And header Token = 'invalidToken'
  When method get
  Then status 401
  And match header api-version == '1.0.0'
  And match response.error == '#string'
  And match response.description == '#string'
