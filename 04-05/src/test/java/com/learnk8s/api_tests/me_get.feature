# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# Feature file generated for /me_get for http method type GET 
# RoostTestHash=ae6b8ce5ab
# 
# 

# ********RoostGPT********
Feature: Account Details API

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
    * url urlBase
    * def authToken = karate.env['AUTH_TOKEN']
    * def apiVersionHeader = { 'Token': '#(authToken)' }

  Scenario: Retrieve the details of the authenticated user's account with a valid API key
    Given path '/me'
    And header Token = authToken
    When method get
    Then status 200
    And match responseHeaders contains { 'api-version': '#string' }
    And match response == { id: '#uuid', did: '##string', name: '#? _ != null && _.matches(/^[\\p{L} .\'-]{1,100}$/)', image: '#? _ != null && _.matches(/^\\w+:(\\/?\\/?)[^\\s]+$/)', email: '#regex[(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))]', settings: '#object', createdAt: '#string', updatedAt: '#string' }

  Scenario: Retrieve the details of the authenticated user's account with an invalid API key
    Given path '/me'
    And header Token = 'invalidToken'
    When method get
    Then status 401
    And match responseHeaders contains { 'api-version': '#string' }
    And match response == { error: '#string', description: '#string' }
