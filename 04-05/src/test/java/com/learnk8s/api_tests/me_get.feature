# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# Feature file generated for /me_get for http method type GET 
# RoostTestHash=ae6b8ce5ab
# 
# 

# ********RoostGPT********
Feature: Account Details

Background:
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase
  * def authToken = karate.env['AUTH_TOKEN']
  * header Token = authToken

Scenario: Retrieve account details with valid authentication
  Given path '/me'
  When method get
  Then status 200
  And match responseHeaders['api-version'] == '1.0.0'
  And match response == 
    """
    {
      id: '#uuid',
      createdAt: '#regex(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z)',
      did: '##string',
      email: '#regex(^(([^<>()\\[\\]\\\\.,;:\\s@\\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$)',
      id: '#uuid',
      image: '##regex(^\\w+:(\\/?\\/?)[^\\s]+$)',
      name: '##regex(^[\\p{L} .\\'-]{1,100}$)',
      settings: '#object',
      updatedAt: '#regex(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z)'
    }
    """

Scenario: Retrieve account details without authentication
  Given path '/me'
  And header Token = null
  When method get
  Then status 401
  And match responseHeaders['api-version'] == '1.0.0'
  And match response == 
    """
    {
      error: '#string',
      description: '#string'
    }
    """

Scenario: Retrieve account details with bad request
  Given path '/me'
  And param invalidParam = 'invalid'
  When method get
  Then status 400
  And match responseHeaders['api-version'] == '1.0.0'
  And match response == 
    """
    {
      error: '#string',
      description: '#string'
    }
    """
