# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# Feature file generated for /me_get for http method type GET 
# RoostTestHash=ae6b8ce5ab
# 
# 

# ********RoostGPT********
Feature: Account Details API

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
    * url urlBase
    * def authToken = karate.env['AUTH_TOKEN']
    * def apiVersionHeader = { 'Token': '#(authToken)' }

  Scenario: Retrieve the details of the authenticated user's account with a valid API key
    Given path '/me'
    And header Token = authToken
    When method get
    Then status 200
    And match responseHeaders contains { 'api-version': '#string' }
    And match response == { id: '#uuid', did: '##string', name: '##string', image: '##string', email: '#regex(^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$)', settings: '#object', createdAt: '#string', updatedAt: '#string' }

  Scenario: Attempt to retrieve account details with an invalid API key
    Given path '/me'
    And header Token = 'invalidToken'
    When method get
    Then status 401
    And match responseHeaders contains { 'api-version': '#string' }
    And match response == { error: '#string', description: '#string' }

  Scenario: Attempt to retrieve account details without an API key
    Given path '/me'
    When method get
    Then status 401
    And match responseHeaders contains { 'api-version': '#string' }
    And match response == { error: '#string', description: '#string' }

  Scenario: Attempt to retrieve account details with a malformed API key
    Given path '/me'
    And header Token = 'malformedToken@@@'
    When method get
    Then status 400
    And match responseHeaders contains { 'api-version': '#string' }
    And match response == { error: '#string', description: '#string', schema_field: '##string', value: '##string' }
