# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# Feature file generated for /aisp/accounts/availability_post for http method type POST 
# RoostTestHash=99f609b092
# 
# 

# ********RoostGPT********
Feature: Test account availability endpoint

  Background:
    * def urlBase = karate.properties['url.base'] || 'http://localhost:8080'
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']

  Scenario Outline: Verify account availability with valid request body and parameters
    Given path '/aisp/accounts/availability'
    And header Authorization = 'Bearer ' + authToken
    And header Content-Type = <ContentType>
    And header x-fapi-auth-date = <AuthDate>
    And header x-fapi-customer-ip-address = <CustomerIPAddress>
    And header x-fapi-interaction-id = <InteractionId>
    And header Accept-Language = <AcceptLanguage>
    And request <RequestBody>
    When method POST
    Then status 200
    And match response contains { data: '#array' }
    And match each response.data[*] contains { paramName: '#string', status: '#string' }

    Examples:
      | read('aisp_accounts_availability_post.csv') |

  Scenario: Verify account availability response for bad request
    Given path '/aisp/accounts/availability'
    And header Authorization = 'Bearer ' + authToken
    And header Content-Type = 'application/json'
    And header x-fapi-auth-date = 'Sun, 10 Sep 2017 19:43:31 UTC'
    And header x-fapi-customer-ip-address = '169.254.169.254'
    And header x-fapi-interaction-id = 'unique-correlation-id-3'
    And header Accept-Language = 'en-HK'
    And request
      """
      { 
        "data": [{ "paramName": "invalidParam", "paramValue": "value" }] 
      }
      """
    When method POST
    Then status 400
    And match response contains { errors: '#array' }
    And match each response.errors[*] contains { code: '#string', causes: '#string' }

  Scenario: Verify account availability response for unauthorized access
    Given path '/aisp/accounts/availability'
    And header Authorization = 'InvalidToken'
    And header Content-Type = 'application/json'
    When method POST
    Then status 401

  Scenario: Verify account availability response for forbidden access
    Given path '/aisp/accounts/availability'
    And header Authorization = 'Bearer ' + authToken
    And header Content-Type = 'application/json'
    When method POST
    Then status 403

  Scenario: Verify account availability response for unsupported media type
    Given path '/aisp/accounts/availability'
    And header Authorization = 'Bearer ' + authToken
    And header Content-Type = 'text/plain'
    When method POST
    Then status 415

  Scenario: Verify account availability response for server error
    Given path '/aisp/accounts/availability'
    And header Authorization = 'Bearer ' + authToken
    And header Content-Type = 'application/json'
    When method POST
    Then status 500

  Scenario: Verify account availability response for service unavailable
    Given path '/aisp/accounts/availability'
    And header Authorization = 'Bearer ' + authToken
    And header Content-Type = 'application/json'
    When method POST
    Then status 503

  Scenario: Verify account availability response for gateway timeout
    Given path '/aisp/accounts/availability'
    And header Authorization = 'Bearer ' + authToken
    And header Content-Type = 'application/json'
    When method POST
    Then status 504
