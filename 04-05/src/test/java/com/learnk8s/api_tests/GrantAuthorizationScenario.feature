# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# ROOST_METHOD_HASH=803fe763f5
# ROOST_METHOD_SIG_HASH=c56a467b87
# 
#  ########## Scenario ########## 
# 
# {
#   background: 'Given the base URL is "http://localhost:8080"',
#   rule: null,
#   scenario: 'Grant authorization\r\n' +
#     '    Given an existing account, create another account\r\n' +
#     '    When the client sends a POST request to "/authorizations"\r\n' +
#     '    Then grant access to your account and confirm access via GET request to "/authorizations"',
#   title: 'Grant authorization'
# }
# 

# ********RoostGPT********
Feature: Grant authorization

  Background: Set base URL
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
    * url urlBase

  Scenario: Create an account and grant authorization
    # Creating an account with POST /accounts
    Given path '/accounts'
    And request { email: 'john.doe@example.com' }
    And header commit-hash = '928d28d'
    When method post
    Then status 201
    And match responseHeaders['api-version'] == '1.0.0'
    And match responseHeaders['commit-hash'] == '928d28d'

    # Grant access with POST /authorizations
    Given path '/authorizations'
    And request { email: 'john.doe@example.com' }
    And header Token = 'some-valid-token'
    When method post
    Then status 201
    And match responseHeaders['api-version'] == '1.0.0'
    And match responseHeaders['location'] != null
    And match response contains { id: '#uuid', name: '#? _ != null', email: '#string', createdAt: '#string', updatedAt: '#string' }

    # Confirm access with GET /authorizations
    Given path '/authorizations'
    And header Token = 'some-valid-token'
    When method get
    Then status 200
    And match responseHeaders['api-version'] == '1.0.0'
    And match response contains { total: '#number', authorizations: '#array' }
    And match each response.authorizations contains { id: '#uuid', name: '#? _ != null', email: '#string', createdAt: '#string', updatedAt: '#string' }
