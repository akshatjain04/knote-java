# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# ROOST_METHOD_HASH=b5e247a568
# ROOST_METHOD_SIG_HASH=5e9712fdf7
# 
#  ########## Scenario ########## 
# 
# {
#   background: null,
#   rule: null,
#   scenario: 'Create pet with parameters\n' +
#     '    Given the API running at http://petstore.swagger.io/v2\n' +
#     '    When a POST request to /pet is made\n' +
#     '    And name is doggies\n' +
#     '    And status is available\n' +
#     '    Then a 200 response is returned within 50ms',
#   title: 'Create pet with parameters'
# }
# 

# ********RoostGPT********
Feature: Create pet with parameters

Background:
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase

Scenario: Create a pet with valid parameters
  # Expected outcome: A pet is created with status 200 within 50ms
  Given path '/v2/pet'
  And request { id: #(id), name: 'doggies', photoUrls: ['http://example.com/photo1'], tags: [{ id: #(tagId), name: 'tag1' }], status: 'available' }
  When method post
  Then status 200
  And assert responseTime < 50
  And match response == { id: '#number', name: 'doggies', photoUrls: '#array', tags: '#array', status: 'available' }
