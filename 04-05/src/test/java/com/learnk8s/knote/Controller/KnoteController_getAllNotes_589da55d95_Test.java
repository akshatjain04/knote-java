// Test generated by RoostGPT for test knote using AI Type Open AI and AI Model gpt-4

package com.learnk8s.knote.Controller;

import static org.mockito.Mockito.when;
import static org.junit.jupiter.api.Assertions.assertEquals;

import com.learnk8s.knote.Note.Note;
import com.learnk8s.knote.Repository.NotesRepository;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;

public class KnoteController_getAllNotes_589da55d95_Test {
    
    @InjectMocks
    KnoteController knoteController;

    @Mock
    NotesRepository notesRepository;

    @Mock
    Model model;

    @BeforeEach
    public void setup() {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    public void testGetAllNotes_WhenNotesExist() {
        Note note1 = new Note("Note 1");
        Note note2 = new Note("Note 2");

        List<Note> notesList = Arrays.asList(note1, note2);
        Collections.reverse(notesList);

        when(notesRepository.findAll()).thenReturn(notesList);

        List<Note> result = knoteController.getAllNotes(model);

        assertEquals(notesList, result, "The notes should match");
    }

    @Test
    public void testGetAllNotes_WhenNoNotesExist() {
        List<Note> emptyList = Collections.emptyList();

        when(notesRepository.findAll()).thenReturn(emptyList);

        List<Note> result = knoteController.getAllNotes(model);

        assertEquals(emptyList, result, "The notes list should be empty");
    }
}
